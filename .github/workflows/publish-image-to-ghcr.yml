name: Publish Docker Image to ghcr

on:
  workflow_call:
    inputs:
      GITHUB_ACTOR:
        required: true
        type: string
        description: ref - github.actor
      GITHUB_TOKEN:
        required: true
        type: string
        description: ref - secrets.GITHUB_TOKEN
      GITHUB_REPOSITORY_OWNER_PART_SLUG:
        required: true
        type: string
        description: ref - env.GITHUB_REPOSITORY_OWNER_PART_SLUG
      GITHUB_REPOSITORY_NAME_PART_SLUG:
        required: true
        type: string
        description: ref - env.GITHUB_REPOSITORY_NAME_PART_SLUG
      GITHUB_REF_SLUG:
        required: true
        type: string
        description: ref - env.GITHUB_REF_SLUG
      GITHUB_SHA:
        required: true
        type: string
        description: ref - github.sha
      STEPS_META_OUTPUTS_LABELS:
        required: true
        type: string
        description: ref - steps.meta.outputs.labels
jobs:
  push_to_registry:
    name: Push Docker image to Docker Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19.7'
      - run: go version

      - name: Check our repo
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ inputs.GITHUB_ACTOR }}
          password: ${{ inputs.GITHUB_TOKEN }}
      
      - name: Generate Variables for Tags
        uses: rlespinasse/github-slug-action@v3.x

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: "ghcr.io/${{ inputs.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ inputs.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ inputs.GITHUB_REF_SLUG }},ghcr.io/${{ inputs.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ inputs.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ inputs.GITHUB_SHA }}" 
          labels: ${{ inputs.STEPS_META_OUTPUTS_LABELS }}