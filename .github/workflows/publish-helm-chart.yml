name: Publish Helm Charts

on:
  workflow_call:
    inputs:
      GLUEOPS_ENV:
        required: true
        type: string
      HELM_CHART_REPO_NAME:
        required: true
        type: string


jobs:
  publish:
    runs-on: ubuntu-22.04
    environment: ${{ inputs.GLUEOPS_ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        
      - name: Install Helm Docs
        uses: envoy/install-helm-docs@05313083ef2cfaea27c4c3d7cb725242d22ea88b # v1.0.0
        with:
          version: 1.12.0
      
      - name: Generate and Commit helm-docs
        run: |
          echo '{{ template "chart.header" . }}
          {{ template "chart.deprecationWarning" . }}

          {{ template "chart.badgesSection" . }}

          {{ template "chart.description" . }}

          {{ template "chart.homepageLine" . }}

          {{ template "chart.maintainersSection" . }}

          {{ template "chart.sourcesSection" . }}

          {{ template "chart.requirementsSection" . }}

          {{ template "chart.valuesSection" . }}' > README.md.gotmpl
          helm-docs -t README.md.gotmpl
          git config --global user.email "github@glueops.dev"
          git config --global user.name "GlueOps"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "docs: automated helm-docs action"
            git push
          else
            echo "No changes detected. Nothing to commit."
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Set up Helm
        uses: mamezou-tech/setup-helmfile@fd46979d2984c886929c416fbdf859b1c5efa0ea # v2.1.0
        with:
          helm-version: "v3.14.3"

      - name: Package and Publish
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          HELM_CHART_REPO_NAME: ${{ inputs.HELM_CHART_REPO_NAME }}
        run: |
          export AWS_REGION=us-west-2
          
          status_code=`curl -s -o /dev/null -I -w "%{http_code}" https://${S3_BUCKET_NAME}.s3.us-west-2.amazonaws.com/${HELM_CHART_REPO_NAME}/index.yaml`
          if [ "$status_code" == "404" ]; then
              helm s3 init s3://$S3_BUCKET_NAME/$HELM_CHART_REPO_NAME
          fi
          
          helm repo add $HELM_CHART_REPO_NAME s3://$S3_BUCKET_NAME/$HELM_CHART_REPO_NAME

          helm package --dependency-update .

          for F in $(ls -f *.tgz); do

            helm s3 push --acl="public-read" --relative $F $HELM_CHART_REPO_NAME

          done

          helm s3 reindex --acl="public-read" --relative $HELM_CHART_REPO_NAME
