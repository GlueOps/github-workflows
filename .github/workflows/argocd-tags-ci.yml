name: GlueOps Tags CI

on:
  workflow_call:
    inputs:
      DEPLOYMENT_CONFIGS_APP_NAME:
        required: false
        type: string
        default: ''
        description: 'Optional override if the app name in deployment configurations does not match the repo name.'
      DEPLOYMENT_CONFIGS_REPO:
        required: false
        type: string
        default: 'deployment-configurations'
        description: 'The deployment configuration repo for tenant applications on the GlueOps platform'
      DEPLOYMENT_CONFIGS_REPO_DEFAULT_BRANCH:
        required: false
        type: string
        default: 'main'
        description: 'The default branch of the deployment configuration repo for tenant applications'
      ENV:
        required: true
        type: string
        description: 'The application environment, conforming to the naming convention in the deployment configuration repo for applications.'
      CREATE_PR:
        required: true
        type: boolean
        description: 'Create a PR for this change, or merge to the default branch.'
    secrets:
      GLUEOPS_DEPLOYMENT_CONFIGS_REPO_TOKEN:
        required: true
        description: 'GitHub PAT to enable deployment configuration repo access.'

jobs:
  update_config:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Code
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4

    - name: Checkout Config Repo
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      with:
        repository: '${{ github.repository_owner }}/${{ inputs.DEPLOYMENT_CONFIGS_REPO }}'
        path: './${{ inputs.DEPLOYMENT_CONFIGS_REPO }}'
        token: '${{ secrets.GLUEOPS_DEPLOYMENT_CONFIGS_REPO_TOKEN }}'

    - name: Install yq
      run: |
        wget https://github.com/mikefarah/yq/releases/download/v4.42.1/yq_linux_amd64 -O yq
        chmod +x yq
        sudo mv yq /usr/bin/yq

    - name: Echo GitHub Context and env for Logs
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
        env

    - name: Create GlueOps Tags
      uses: Glueops/github-actions-create-container-tags@main
      id: create-tags

    - name: Get Container Tag for Release/Repository Tag
      id: TagRelease
      if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
      run: |
        echo "TAG=${{ steps.create-tags.outputs.clean_target_ref}}" >> $GITHUB_OUTPUT

    - name: Generate Tag without Release
      id: TagNoRelease
      if: github.event_name != 'release' && !startsWith(github.ref, 'refs/tags/')
      run: |
        TAG=$(git rev-parse --short HEAD)
        echo "TAG=$TAG" >> $GITHUB_OUTPUT

    - name: Update Image Tag
      uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
      with:
        shell: bash
        retry_on: error
        timeout_minutes: 2
        max_attempts: 3
        command: |
          set -e
          cd ./${{ inputs.DEPLOYMENT_CONFIGS_REPO }}
          git pull --rebase
          TAG=${{ steps.TagRelease.outputs.TAG || steps.TagNoRelease.outputs.TAG }}
          DEPLOYMENT_CONFIGS_APP_NAME=${{ inputs.DEPLOYMENT_CONFIGS_APP_NAME || github.event.repository.name }}
          yq -i ".image.tag = \"$TAG\"" ./apps/$DEPLOYMENT_CONFIGS_APP_NAME/envs/${{ inputs.ENV }}/values.yaml
          git config --global --add --bool push.autoSetupRemote true
          git config --local user.email "automated-github-action@glueops.dev"
          git config --local user.name "GlueOps bot"
          git add -A
          git commit -m "${{ github.event.repository.name }}: updating ${{ inputs.ENV }} tag to $TAG, by ${{ github.actor }}"

    - name: Create PR if Desired
      if: ${{ inputs.CREATE_PR }}
      uses: peter-evans/create-pull-request@6d6857d36972b65feb161a90e484f2984215f83e # v6
      with:
        token: ${{ secrets.GLUEOPS_DEPLOYMENT_CONFIGS_REPO_TOKEN }}
        path: './${{ inputs.DEPLOYMENT_CONFIGS_REPO }}'
        title: '${{ github.event.repository.name }} [${{ inputs.ENV }}] > ${{ steps.TagRelease.outputs.TAG || steps.TagNoRelease.outputs.TAG }}'
        base: ${{ inputs.DEPLOYMENT_CONFIGS_REPO_DEFAULT_BRANCH }}
        branch: '${{ github.event.repository.name }}/update-${{ inputs.ENV }}-image-tag-${{ steps.TagRelease.outputs.TAG || steps.TagNoRelease.outputs.TAG }}'
        body: "PR created via CI workflow in [${{ github.repository_owner }}/${{ github.event.repository.name }}](https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}) by [${{ github.actor }}](https://github.com/${{ github.actor }})"
    
    - name: Commit to Default Branch if PR not Desired
      if: ${{ ! inputs.CREATE_PR }}
      working-directory: ./${{ inputs.DEPLOYMENT_CONFIGS_REPO }}
      run: |
        git push
